#ifndef EEPROM_H
#define	EEPROM_H

#include "hw.h"
#include "lcd.h"
#include "locale.h"

#if defined(__AVR)

// save default eeprom in progmem
#define PROGMEM_EEPROM

#ifdef PROGMEM_EEPROM
PROGMEM const char eedata[] = {
#else
volatile const struct {
char data;
} eedata[] EEMEM = {
#endif      
#endif

__EEDATA(0xE8,0xC5,0x04,0x00,0x7E,0x20,0x6C,0x3E) /*config*/
__EEDATA(0x6E,0xB3,0x00,0xEA,0x03,0x05,0x00,0x00)
__EEDATA(0xF4,0x00,0xD6,0x16,0x42,0x56,0x96,0x0B) /*trips*/
__EEDATA(0xA0,0x3B,0x00,0x00,0x8D,0x01,0x02,0x21)
__EEDATA(0x4B,0x2B,0x00,0x13,0xED,0x61,0x00,0x00)
__EEDATA(0x00,0x00,0xCD,0x01,0x3C,0x28,0x00,0x00)
__EEDATA(0x00,0x00,0x00,0x00,0x12,0x16,0x17,0x04)
__EEDATA(0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00)
__EEDATA(0x15,0xBE,0x04,0x00,0x58,0x3C,0xC3,0x00) /*services*/
__EEDATA(0x00,0x00,0xFA,0x11,0x0A,0x13,0x11,0x21)
__EEDATA(0x00,0x00,0xB0,0x12,0x28,0x07,0x11,0x21)
__EEDATA(0x00,0x00,0x17,0x25,0x0A,0x21,0x03,0x20)
__EEDATA(0x00,0x00,0x82,0x30,0x0A,0x07,0x01,0x21)
__EEDATA(0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00)

// ds18b20 serial numbers (OUT, IN, ENGINE)
__EEDATA(0x28,0x8A,0x09,0x95,0xF0,0x01,0x3C,0xFC) /*ds18b20 serial numbers*/
__EEDATA(0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF)
__EEDATA(0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF)

// custom lcd characters
__EEDATA(0x05,0x06,0x05,0x00,0x00,0x00,0x01,0x02) // 0x00 - kmh[0]
__EEDATA(0x0A,0x15,0x15,0x00,0x10,0x05,0x07,0x01) // 0x01 - kmh[1]
__EEDATA(0x07,0x05,0x07,0x00,0x00,0x01,0x02,0x00) // 0x02 - omin[0]
__EEDATA(0x00,0x00,0x08,0x10,0x00,0x0A,0x15,0x15) // 0x03 - omin[1]
__EEDATA(0x0C,0x14,0x14,0x01,0x02,0x05,0x01,0x01) // 0x04 - L100[0]
__EEDATA(0x00,0x00,0x00,0x00,0x00,0x1F,0x15,0x1F) // 0x05 - L100[1]
__EEDATA(0x03,0x05,0x05,0x00,0x00,0x01,0x02,0x00) // 0x06 - l/h[0]
__EEDATA(0x00,0x00,0x08,0x10,0x00,0x14,0x1C,0x04) // 0x07 - l/h[1]

#if defined(__AVR)
// special eeprom mark
__EEDATA(0x00,0x00,0x00,0x00,0xDE,0xAD,0xC0,0xDE)
};
#endif

#endif	/* EEPROM_H */

