#ifndef EEPROM_H
#define	EEPROM_H

#include "hw.h"
#include "lcd.h"
#include "locale.h"

#if defined(__AVR)
volatile const struct {
char data;
} eedata[] EEMEM = {
#endif

__EEDATA(0x92,0xAA,0x04,0x00,0xE8,0x0D,0x80,0x3E) /*config*/
__EEDATA(0x6D,0xB3,0xA8,0x01,0x00,0x05,0x00,0x00)
__EEDATA(0x6E,0x01,0x2C,0x22,0x4E,0x17,0x88,0x10) /*trips*/
__EEDATA(0xF2,0x55,0x00,0x00,0xF9,0x02,0x94,0x00)
__EEDATA(0x2E,0x51,0x09,0x22,0x4E,0xB2,0x00,0x00)
__EEDATA(0x15,0x00,0x11,0x29,0x66,0x29,0x05,0x01)
__EEDATA(0xB4,0x05,0x00,0x00,0x21,0x20,0x26,0x08)
__EEDATA(0x21,0xD9,0x02,0x00,0x00,0x00,0x00,0x00)
__EEDATA(0xFB,0xB0,0x05,0x00,0x75,0x02,0x2F,0x01) /*services*/
__EEDATA(0x00,0x00,0x1F,0x15,0x0A,0x22,0x01,0x21)
__EEDATA(0x00,0x00,0xA2,0x1E,0x28,0xFF,0xFF,0xFF)
__EEDATA(0x00,0x00,0x48,0x0A,0x0A,0x21,0x03,0x20)
__EEDATA(0x00,0x00,0xB3,0x15,0x0A,0x07,0x01,0x21)
__EEDATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00)

// ds18b20 serial numbers (OUT, IN, ENGINE)
__EEDATA(0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF) /*ds18b20 serial numbers*/
__EEDATA(0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF)
__EEDATA(0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF)
        
#ifdef EEPROM_CUSTOM_CHARS
#define CUSTOM_CHAR_DATA(a) __EEDATA(a);
CUSTOM_CHAR_DATA(DATA_KMH_0)    // kmh[0]
CUSTOM_CHAR_DATA(DATA_KMH_1)    // kmh[1]
CUSTOM_CHAR_DATA(DATA_OMIN_0)   // omin[0]
CUSTOM_CHAR_DATA(DATA_OMIN_1)   // omin[1]
CUSTOM_CHAR_DATA(DATA_L100_0)   // L100[0]
CUSTOM_CHAR_DATA(DATA_L100_1)   // L100[1]
CUSTOM_CHAR_DATA(DATA_LH_0)     // l/h[0]
CUSTOM_CHAR_DATA(DATA_LH_1)     // l/h[1]
#endif

#if defined(__AVR)
};
#endif

#endif	/* EEPROM_H */

