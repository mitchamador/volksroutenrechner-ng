#ifndef EEPROM_H
#define	EEPROM_H

#if defined(__AVR)

#ifdef PROGMEM_EEPROM
// save default eeprom in progmem
PROGMEM const char eedata[] = {
#else
volatile const struct {
char data;
} eedata[] EEMEM = {
#endif      
#endif

__EEDATA(0x74,0xE4,0x04,0x00,0xEB,0x2B,0x80,0x3E) /*config*/
__EEDATA(0x6C,0xA9,0x80,0xE7,0x13,0x05,0x00,0x00)
__EEDATA(0x25,0x01,0x71,0x18,0x4F,0x2B,0xB0,0x0E) /*trips*/
__EEDATA(0x21,0x96,0x00,0x00,0xC5,0x00,0xE5,0x3D)
__EEDATA(0x47,0x15,0x18,0x0A,0x5D,0x69,0x00,0x00)
__EEDATA(0x12,0x00,0x98,0x2E,0x26,0x36,0xE1,0x00)
__EEDATA(0x9D,0x09,0x00,0x00,0x58,0x14,0x08,0x03)
__EEDATA(0x23,0x03,0x54,0x03,0x00,0x00,0x00,0x00)
__EEDATA(0x58,0x1F,0x0A,0x00,0x00,0x00,0xFE,0x12) /*services*/
__EEDATA(0x0A,0x03,0x09,0x22,0x51,0x31,0x28,0x07)
__EEDATA(0x11,0x21,0x23,0x4F,0x0A,0x07,0x01,0x21)
__EEDATA(0xC8,0x6A,0x0A,0x21,0x03,0x20,0x00,0x00)

// ds18b20 serial numbers (OUT, IN, ENGINE)
__EEDATA(0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF) /*ds18b20 serial numbers*/
__EEDATA(0x28,0x27,0xF6,0xDC,0x06,0x00,0x00,0xD5)
__EEDATA(0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF)

// custom lcd characters
__EEDATA(0x05,0x06,0x05,0x00,0x00,0x00,0x01,0x02) // 0x00 - kmh[0]
__EEDATA(0x0A,0x15,0x15,0x00,0x10,0x05,0x07,0x01) // 0x01 - kmh[1]
__EEDATA(0x07,0x05,0x07,0x00,0x00,0x01,0x02,0x00) // 0x02 - omin[0]
__EEDATA(0x00,0x00,0x08,0x10,0x00,0x0A,0x15,0x15) // 0x03 - omin[1]
__EEDATA(0x0C,0x14,0x14,0x01,0x02,0x05,0x01,0x01) // 0x04 - L100[0]
__EEDATA(0x00,0x00,0x00,0x00,0x00,0x1F,0x15,0x1F) // 0x05 - L100[1]
__EEDATA(0x03,0x05,0x05,0x00,0x00,0x01,0x02,0x00) // 0x06 - l/h[0]
__EEDATA(0x00,0x00,0x08,0x10,0x00,0x14,0x1C,0x04) // 0x07 - l/h[1]

// continuous data
__EEDATA(0x8F,0x03,0x01,0x00,0x09,0x09,0xD2,0x4E)
__EEDATA(0x09,0x00,0x09,0x00,0x0C,0x00,0x0C,0x00)

#if defined(__AVR)
#if defined(PROGMEM_EEPROM)
// special eeprom mark
__EEDATA(0x00,0x00,0x00,0x00,0xDE,0xAD,0xC0,0xDE)
#endif
};
#endif

#endif	/* EEPROM_H */

