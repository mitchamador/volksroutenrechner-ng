#ifndef EEPROM_H
#define	EEPROM_H

#if defined(__AVR)

#ifdef PROGMEM_EEPROM
// save default eeprom in progmem
PROGMEM const char eedata[] = {
#else
volatile const struct {
char data;
} eedata[] EEMEM = {
#endif      
#endif

__EEDATA(0x27,0x45,0x05,0x00,0x8A,0x0A,0x80,0x3E) /*config*/
__EEDATA(0x6E,0xAC,0x80,0xE7,0x11,0x05,0x00,0x00)
__EEDATA(0x8C,0x01,0xC9,0x2B,0x58,0x34,0x33,0x15) /*trips*/
__EEDATA(0xA7,0xC7,0x00,0x00,0x00,0x00,0xB9,0x02)
__EEDATA(0x3F,0x3F,0x49,0x00,0xF9,0x03,0x00,0x00)
__EEDATA(0x00,0x00,0xB9,0x02,0x3F,0x3F,0x49,0x00)
__EEDATA(0xF9,0x03,0x00,0x00,0x19,0x16,0x04,0x10)
__EEDATA(0x25,0x10,0x60,0x00,0x06,0x00,0x00,0x00)
__EEDATA(0xEC,0xB2,0x06,0x00,0x00,0x00,0xC2,0x0D) /*services*/
__EEDATA(0x0A,0x01,0x03,0x25,0x26,0x92,0x28,0x07)
__EEDATA(0x11,0x21,0xE9,0x12,0x0A,0x31,0x12,0x24)
__EEDATA(0xCC,0x5F,0x0A,0x15,0x03,0x23,0x00,0x00)

// ds18b20 serial numbers (OUT, IN, ENGINE)
__EEDATA(0x28,0x27,0xF6,0xDC,0x06,0x00,0x00,0xD5) /*ds18b20 serial numbers*/
__EEDATA(0x28,0x27,0xF6,0xDC,0x06,0x00,0x00,0xD5)
__EEDATA(0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF)

// custom lcd characters
__EEDATA(0x05,0x06,0x05,0x00,0x00,0x01,0x02,0x00) // 0x00 - kmh[0]
__EEDATA(0x0A,0x15,0x15,0x00,0x15,0x07,0x01,0x00) // 0x01 - kmh[1]
__EEDATA(0x07,0x05,0x07,0x00,0x01,0x00,0x00,0x00) // 0x02 - omin[0]
__EEDATA(0x00,0x00,0x08,0x10,0x0A,0x15,0x15,0x00) // 0x03 - omin[1]
__EEDATA(0x0C,0x14,0x15,0x02,0x05,0x01,0x01,0x00) // 0x04 - L100[0]
__EEDATA(0x00,0x00,0x00,0x00,0x1F,0x15,0x1F,0x00) // 0x05 - L100[1]
__EEDATA(0x03,0x05,0x05,0x00,0x01,0x00,0x00,0x00) // 0x06 - l/h[0]
__EEDATA(0x00,0x00,0x08,0x10,0x0A,0x0E,0x02,0x00) // 0x07 - l/h[1]

// continuous data
__EEDATA(0x79,0x25,0x00,0x00,0x09,0x09,0x10,0x00)
__EEDATA(0x08,0x00,0x09,0x00,0x0C,0x00,0x0C,0x00)

#if defined(__AVR)
#if defined(PROGMEM_EEPROM)
// special eeprom mark
__EEDATA(0x00,0x00,0x00,0x00,0xDE,0xAD,0xC0,0xDE)
#endif
};
#endif

// internal eeprom journal data
#if defined(JOURNAL_EEPROM_INTERNAL)

#include "journal.h"
// dummy bytes data
#ifdef PROGMEM_EEPROM
volatile const char dummy_data[J_EEPROM_START] EEMEM;
#else
volatile const char dummy_data[J_EEPROM_START - sizeof(eedata)] EEMEM;
#endif

#include "eeprom-journal.h"

#endif

#endif	/* EEPROM_H */

