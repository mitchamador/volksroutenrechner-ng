#ifndef EEPROM_H
#define	EEPROM_H

#include "hw.h"
#include "lcd.h"
#include "locale.h"

#if defined(__AVR)
PROGMEM const char eedata[] = {
#endif

__EEDATA(0x0C, 0xC0, 0x04, 0x00, 0x0E, 0x29, 0x6C, 0x3E) /*config*/
__EEDATA(0x6D, 0xB3, 0xEA, 0x01, 0x00, 0x05, 0x00, 0x00)
__EEDATA(0x11, 0x01, 0x5B, 0x28, 0x73, 0x44, 0xC7, 0x0D) /*trips*/
__EEDATA(0xE3, 0x46, 0x00, 0x00, 0xC0, 0x02, 0x3B, 0x01)
__EEDATA(0x66, 0x49, 0xCC, 0x20, 0x92, 0xA3, 0x00, 0x00)
__EEDATA(0x0C, 0x00, 0x9D, 0x28, 0x78, 0x29, 0x9B, 0x00)
__EEDATA(0xDB, 0x02, 0x00, 0x00, 0x24, 0x10, 0x19, 0x03)
__EEDATA(0x22, 0x3A, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00)
__EEDATA(0x6C, 0x6A, 0x03, 0x00, 0xDA, 0x3D, 0x8B, 0x00) /*services*/
__EEDATA(0x00, 0x00, 0x9E, 0x0C, 0x0A, 0x13, 0x11, 0x21)
__EEDATA(0x00, 0x00, 0x54, 0x0D, 0x28, 0x07, 0x11, 0x21)
__EEDATA(0x00, 0x00, 0xBB, 0x1F, 0x0A, 0x21, 0x03, 0x20)
__EEDATA(0x00, 0x00, 0x26, 0x2B, 0x0A, 0x07, 0x01, 0x21)
__EEDATA(0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)

// ds18b20 serial numbers (OUT, IN, ENGINE)
__EEDATA(0x28, 0x8A, 0x09, 0x95, 0xF0, 0x01, 0x3C, 0xFC) /*ds18b20 serial numbers*/
__EEDATA(0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF)
__EEDATA(0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF)

// custom lcd characters
__EEDATA(0x05,0x06,0x05,0x00,0x00,0x00,0x01,0x02) // 0x00 - kmh[0]
__EEDATA(0x0A,0x15,0x15,0x00,0x10,0x05,0x07,0x01) // 0x01 - kmh[1]
__EEDATA(0x07,0x05,0x07,0x00,0x00,0x01,0x02,0x00) // 0x02 - omin[0]
__EEDATA(0x00,0x00,0x08,0x10,0x00,0x0A,0x15,0x15) // 0x03 - omin[1]
__EEDATA(0x0C,0x14,0x14,0x01,0x02,0x05,0x01,0x01) // 0x04 - L100[0]
__EEDATA(0x00,0x00,0x00,0x00,0x00,0x1F,0x15,0x1F) // 0x05 - L100[1]
__EEDATA(0x03,0x05,0x05,0x00,0x00,0x01,0x02,0x00) // 0x06 - l/h[0]
__EEDATA(0x00,0x00,0x08,0x10,0x00,0x14,0x1C,0x04) // 0x07 - l/h[1]

#if defined(__AVR)
// special eeprom mark
__EEDATA(0x00,0x00,0x00,0x00,0xDE,0xAD,0xC0,0xDE)
};
#endif

#endif	/* EEPROM_H */

