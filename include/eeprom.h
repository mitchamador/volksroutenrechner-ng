#ifndef EEPROM_H
#define	EEPROM_H

#if defined(__AVR)

#ifdef PROGMEM_EEPROM
// save default eeprom in progmem
PROGMEM const char eedata[] = {
#else
volatile const struct {
char data;
} eedata[] EEMEM = {
#endif      
#endif

__EEDATA(0x9A,0xCB,0x04,0x00,0xCC,0x00,0x6C,0x3E) /*config*/
__EEDATA(0x6E,0xB3,0x00,0xE2,0x13,0x05,0x00,0x00)
__EEDATA(0x09,0x00,0x63,0x25,0x18,0x0E,0x59,0x00) /*trips*/
__EEDATA(0xAD,0x01,0x00,0x00,0x06,0x01,0x36,0x24)
__EEDATA(0x74,0x42,0x1E,0x0C,0xE6,0x3D,0x00,0x00)
__EEDATA(0x38,0x00,0x72,0x10,0x4A,0x1B,0x4A,0x02)
__EEDATA(0xDB,0x0A,0x00,0x00,0x25,0x18,0x16,0x07)
__EEDATA(0x22,0x94,0x03,0x00,0x00,0x00,0x00,0x00)
__EEDATA(0xE4,0x1F,0x06,0x00,0x0B,0x98,0xFA,0x00) /*services*/
__EEDATA(0x00,0x00,0xAE,0x17,0x0A,0x13,0x11,0x21)
__EEDATA(0x00,0x00,0x64,0x18,0x28,0x07,0x11,0x21)
__EEDATA(0x00,0x00,0xCB,0x2A,0x0A,0x21,0x03,0x20)
__EEDATA(0x00,0x00,0x36,0x36,0x0A,0x07,0x01,0x21)
__EEDATA(0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00)

// ds18b20 serial numbers (OUT, IN, ENGINE)
__EEDATA(0x28,0x8A,0x09,0x95,0xF0,0x01,0x3C,0xFC) /*ds18b20 serial numbers*/
__EEDATA(0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF)
__EEDATA(0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF)

// custom lcd characters
__EEDATA(0x05,0x06,0x05,0x00,0x00,0x00,0x01,0x02) // 0x00 - kmh[0]
__EEDATA(0x0A,0x15,0x15,0x00,0x10,0x05,0x07,0x01) // 0x01 - kmh[1]
__EEDATA(0x07,0x05,0x07,0x00,0x00,0x01,0x02,0x00) // 0x02 - omin[0]
__EEDATA(0x00,0x00,0x08,0x10,0x00,0x0A,0x15,0x15) // 0x03 - omin[1]
__EEDATA(0x0C,0x14,0x14,0x01,0x02,0x05,0x01,0x01) // 0x04 - L100[0]
__EEDATA(0x00,0x00,0x00,0x00,0x00,0x1F,0x15,0x1F) // 0x05 - L100[1]
__EEDATA(0x03,0x05,0x05,0x00,0x00,0x01,0x02,0x00) // 0x06 - l/h[0]
__EEDATA(0x00,0x00,0x08,0x10,0x00,0x14,0x1C,0x04) // 0x07 - l/h[1]

#if defined(__AVR)
#if defined(PROGMEM_EEPROM)
// special eeprom mark
__EEDATA(0x00,0x00,0x00,0x00,0xDE,0xAD,0xC0,0xDE)
#endif
};
#endif

#endif	/* EEPROM_H */

