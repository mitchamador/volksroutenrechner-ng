#ifndef EEPROM_H
#define	EEPROM_H

#if defined(__AVR)

#ifdef PROGMEM_EEPROM
// save default eeprom in progmem
PROGMEM const char eedata[] = {
#else
volatile const struct {
char data;
} eedata[] EEMEM = {
#endif      
#endif

__EEDATA(0x10,0xDB,0x04,0x00,0x41,0x04,0x80,0x3E) /*config*/
__EEDATA(0x6D,0xAC,0x80,0xE7,0x13,0x05,0x00,0x00)
__EEDATA(0x3F,0x01,0x1F,0x1C,0x25,0x22,0x72,0x11) /*trips*/
__EEDATA(0x5B,0xB5,0x00,0x00,0xD0,0x00,0x60,0x21)
__EEDATA(0x47,0x58,0x86,0x0B,0x4E,0x77,0x00,0x00)
__EEDATA(0x17,0x00,0xB6,0x3D,0x09,0x15,0x4B,0x01)
__EEDATA(0x9C,0x0D,0x00,0x00,0x17,0x17,0x09,0x12)
__EEDATA(0x22,0x12,0x39,0x03,0x00,0x00,0x00,0x00)
__EEDATA(0x16,0x0C,0x05,0x00,0x00,0x00,0x89,0x09) /*services*/
__EEDATA(0x0A,0x03,0x09,0x22,0xDC,0x27,0x28,0x07)
__EEDATA(0x11,0x21,0xAE,0x45,0x0A,0x07,0x01,0x21)
__EEDATA(0x53,0x61,0x0A,0x21,0x03,0x20,0x00,0x00)

// ds18b20 serial numbers (OUT,IN,ENGINE)
__EEDATA(0x28,0x8A,0x09,0x95,0xF0,0x01,0x3C,0xFC) /*ds18b20 serial numbers*/
__EEDATA(0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF)
__EEDATA(0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF)

// custom lcd characters
__EEDATA(0x05,0x06,0x05,0x00,0x00,0x00,0x01,0x02) // 0x00 - kmh[0]
__EEDATA(0x0A,0x15,0x15,0x00,0x10,0x05,0x07,0x01) // 0x01 - kmh[1]
__EEDATA(0x07,0x05,0x07,0x00,0x00,0x01,0x02,0x00) // 0x02 - omin[0]
__EEDATA(0x00,0x00,0x08,0x10,0x00,0x0A,0x15,0x15) // 0x03 - omin[1]
__EEDATA(0x0C,0x14,0x14,0x01,0x02,0x05,0x01,0x01) // 0x04 - L100[0]
__EEDATA(0x00,0x00,0x00,0x00,0x00,0x1F,0x15,0x1F) // 0x05 - L100[1]
__EEDATA(0x03,0x05,0x05,0x00,0x00,0x01,0x02,0x00) // 0x06 - l/h[0]
__EEDATA(0x00,0x00,0x08,0x10,0x00,0x14,0x1C,0x04) // 0x07 - l/h[1]

// continuous data
__EEDATA(0xC7,0xE0,0x00,0x00,0x09,0x09,0xFF,0xD8)
__EEDATA(0x09,0x00,0x09,0x00,0x0C,0x00,0x0C,0x00)

#if defined(__AVR)
#if defined(PROGMEM_EEPROM)
// special eeprom mark
__EEDATA(0x00,0x00,0x00,0x00,0xDE,0xAD,0xC0,0xDE)
#endif
};
#endif

#endif	/* EEPROM_H */

