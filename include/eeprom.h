#ifndef EEPROM_H
#define	EEPROM_H

#include "hw.h"
#include "lcd.h"
#include "locale.h"

#if defined(__AVR)
volatile const struct {
char data;
} eedata[] EEMEM = {
#endif

__EEDATA(0x73, 0xAD, 0x04, 0x00, 0x96, 0x3C, 0x80, 0x3E) /*config*/
__EEDATA(0x6E, 0xB3, 0xE8, 0x01, 0x00, 0x05, 0x00, 0x00)
__EEDATA(0x2E, 0x01, 0xBA, 0x1A, 0x0D, 0x22, 0xA1, 0x0D) /*trips*/
__EEDATA(0x47, 0x46, 0x00, 0x00, 0x6E, 0x02, 0x03, 0x2D)
__EEDATA(0x3F, 0x3C, 0xD6, 0x1C, 0x58, 0x95, 0x00, 0x00)
__EEDATA(0x1B, 0x00, 0xED, 0x1C, 0x63, 0x17, 0x23, 0x01)
__EEDATA(0xBA, 0x05, 0x00, 0x00, 0x17, 0x20, 0x17, 0x09)
__EEDATA(0x21, 0x08, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00)
__EEDATA(0x69, 0x64, 0x06, 0x00, 0x84, 0xD2, 0x51, 0x01) /*services*/
__EEDATA(0x00, 0x00, 0x00, 0x18, 0x0A, 0x22, 0x01, 0x21)
__EEDATA(0x00, 0x00, 0x83, 0x21, 0x28, 0xFF, 0xFF, 0xFF)
__EEDATA(0x00, 0x00, 0x29, 0x0D, 0x0A, 0x21, 0x03, 0x20)
__EEDATA(0x00, 0x00, 0x94, 0x18, 0x0A, 0x07, 0x01, 0x21)
__EEDATA(0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)

// ds18b20 serial numbers (OUT, IN, ENGINE)
__EEDATA(0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF) /*ds18b20 serial numbers*/
__EEDATA(0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF)
__EEDATA(0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF)
        
#ifdef EEPROM_CUSTOM_CHARS
#define CUSTOM_CHAR_DATA(a) __EEDATA(a);
CUSTOM_CHAR_DATA(DATA_KMH_0)    // kmh[0]
CUSTOM_CHAR_DATA(DATA_KMH_1)    // kmh[1]
CUSTOM_CHAR_DATA(DATA_OMIN_0)   // omin[0]
CUSTOM_CHAR_DATA(DATA_OMIN_1)   // omin[1]
CUSTOM_CHAR_DATA(DATA_L100_0)   // L100[0]
CUSTOM_CHAR_DATA(DATA_L100_1)   // L100[1]
CUSTOM_CHAR_DATA(DATA_LH_0)     // l/h[0]
CUSTOM_CHAR_DATA(DATA_LH_1)     // l/h[1]
#endif

#if defined(__AVR)
};
#endif

#endif	/* EEPROM_H */

