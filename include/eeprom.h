#ifndef EEPROM_H
#define	EEPROM_H

#if defined(__AVR)

#ifdef PROGMEM_EEPROM
// save default eeprom in progmem
PROGMEM const char eedata[] = {
#else
volatile const struct {
char data;
} eedata[] EEMEM = {
#endif      
#endif

__EEDATA(0x2E,0xD2,0x04,0x00,0x23,0x2B,0x80,0x3E) /*config*/
__EEDATA(0x6D,0xC6,0x00,0xE6,0x13,0x05,0x00,0x00)
__EEDATA(0x09,0x00,0xD8,0x24,0x20,0x11,0x63,0x00) /*trips*/
__EEDATA(0xDF,0x01,0x00,0x00,0xEC,0x00,0x65,0x36)
__EEDATA(0x70,0x26,0x93,0x0B,0x1C,0x3A,0x00,0x00)
__EEDATA(0x2A,0x00,0x49,0x38,0x11,0x0B,0x0C,0x02)
__EEDATA(0x3B,0x0A,0x00,0x00,0x55,0x19,0x09,0x09)
__EEDATA(0x22,0x13,0x03,0x09,0x00,0x00,0x00,0x00)
__EEDATA(0x20,0x28,0x00,0x00,0xD7,0xA2,0x06,0x00) /*services*/
__EEDATA(0x00,0x00,0xA7,0x00,0x0A,0x03,0x09,0x22)
__EEDATA(0x00,0x00,0xFA,0x1E,0x28,0x07,0x11,0x21)
__EEDATA(0x00,0x00,0x61,0x31,0x0A,0x21,0x03,0x20)
__EEDATA(0x00,0x00,0xCC,0x3C,0x0A,0x07,0x01,0x21)
__EEDATA(0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00)

// ds18b20 serial numbers (OUT, IN, ENGINE)
__EEDATA(0x28,0x8A,0x09,0x95,0xF0,0x01,0x3C,0xFC) /*ds18b20 serial numbers*/
__EEDATA(0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF)
__EEDATA(0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF)

// custom lcd characters
__EEDATA(0x05,0x06,0x05,0x00,0x00,0x00,0x01,0x02) // 0x00 - kmh[0]
__EEDATA(0x0A,0x15,0x15,0x00,0x10,0x05,0x07,0x01) // 0x01 - kmh[1]
__EEDATA(0x07,0x05,0x07,0x00,0x00,0x01,0x02,0x00) // 0x02 - omin[0]
__EEDATA(0x00,0x00,0x08,0x10,0x00,0x0A,0x15,0x15) // 0x03 - omin[1]
__EEDATA(0x0C,0x14,0x14,0x01,0x02,0x05,0x01,0x01) // 0x04 - L100[0]
__EEDATA(0x00,0x00,0x00,0x00,0x00,0x1F,0x15,0x1F) // 0x05 - L100[1]
__EEDATA(0x03,0x05,0x05,0x00,0x00,0x01,0x02,0x00) // 0x06 - l/h[0]
__EEDATA(0x00,0x00,0x08,0x10,0x00,0x14,0x1C,0x04) // 0x07 - l/h[1]

#if defined(__AVR)
#if defined(PROGMEM_EEPROM)
// special eeprom mark
__EEDATA(0x00,0x00,0x00,0x00,0xDE,0xAD,0xC0,0xDE)
#endif
};
#endif

#endif	/* EEPROM_H */

